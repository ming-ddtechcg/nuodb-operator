sudo: required
# We need the systemd for the kubeadm and it's default from 16.04+
dist: xenial
language: python
os: linux
sudo: required

python:
- "3.6"

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config

before_install:
- chmod +x scripts/ci/install-deps.sh

install:
- scripts/ci/install-deps.sh

before_script:
- eval scripts/ci/verify_operator.sh
- scripts/ci/build_operator.sh
- echo "Image Tag $NUODB_OP_IMAGE"
- sudo minikube start --vm-driver=none --kubernetes-version=v1.15.0 --memory=8000 --cpus=4
- "sudo chown -R travis: /home/travis/.minikube/"
- kubectl cluster-info
# Verify kube-addon-manager.
# kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to be available"; kubectl get pods --all-namespaces; done
# Wait for kube-dns to be ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
#Install OLM on minikube
- kubectl apply -f https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.11.0/crds.yaml
- kubectl apply -f https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.11.0/olm.yaml
# Test nuodb-operator
- kubectl get nodes

script:
# Test with operator-sdk scorecard
- scripts/ci/test_scorecard.sh $NUODB_OP_IMAGE

# Test the nuodb deployment with operator olm
- scripts/ci/test_operator.sh
